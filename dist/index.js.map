{"version":3,"sources":["webpack://VideoPlayer/webpack/universalModuleDefinition","webpack://VideoPlayer/webpack/bootstrap","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/createClass.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/typeof.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://VideoPlayer/./node_modules/@babel/runtime/regenerator/index.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://VideoPlayer/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://VideoPlayer/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://VideoPlayer/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://VideoPlayer/./src/Provider/testProvider.js","webpack://VideoPlayer/./src/lib/getDomNode/index.js","webpack://VideoPlayer/./src/lib/loadScript/index.js","webpack://VideoPlayer/./src/lib/unsupported/index.js","webpack://VideoPlayer/./src/global.js","webpack://VideoPlayer/./src/Provider/Dailymotion/index.js","webpack://VideoPlayer/./src/Provider/Flowplayer/index.js","webpack://VideoPlayer/./src/lib/loadStyle/index.js","webpack://VideoPlayer/./src/Provider/Vimeo/index.js","webpack://VideoPlayer/./src/Provider/Youtube/index.js","webpack://VideoPlayer/./src/Validation/index.js","webpack://VideoPlayer/./src/Player/index.js","webpack://VideoPlayer/./src/VideoPlayer/index.js","webpack://VideoPlayer/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","1","2","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","head","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","oldJsonpFunction","slice","s","_defineProperties","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","decorators","context","desc","forEach","initializer","reverse","reduce","decorator","instance","TypeError","_typeof2","obj","iterator","constructor","_typeof","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","asyncGeneratorStep","gen","_next","_throw","arg","info","done","then","fn","self","this","args","arguments","apply","Array","isArray","_arr","_n","_d","_e","_s","_i","next","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","global","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","toString","keys","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","rval","dispatchException","exception","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","pushTryEntry","locs","iteratorMethod","TestProvider","options","id","_this","classCallCheck_default","iframeElement","iframeDoc","iframeContentWindow","isMuted","isFullScreen","listeners","parent","domNode","querySelector","getElementById","contentDocument","contentWindow","open","write","close","_this$iframeDoc$getEl","getElementsByTagName","videoBBB","slicedToArray_default","addEventListener","receivedMessage","log","concat","message","JSON","parse","command","play","fireEvent","pause","currentTime","muted","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","mozCancelFullScreen","webkitCancelFullScreen","exitFullscreen","volume","removeChild","on","evt","callbackFunction","cb","unshift","index","splice","postMessage","stringify","location","origin","unmute","mute","volumeLevel","seconds","getDomNode","loadScript","url","unsupported","_len","fields","_key","warn","_len2","_key2","field","DMSDK","FPSDK","VMSDK","YTSDK","eventsNameMapping","end","playbackProgress","loadProgress","seek","setVolume","buffering","firstPlay","eventsToIgnore","DailymotionProvider","domNodeId","dmPlayer","internalListeners","dmListeners","ready","timeupdatePercentages","25","50","75","createDM","assign","video","videoId","providerOptions","_this2","fullscreen","typeof_default","DM","player","_this3","loadSDK","iframe","registerDefaultListeners","_this4","callback","_this5","once","off","percentage","_this$dmPlayer","duration","Math","floor","_this6","onPercentage","_this7","remove","_this8","eventName","find","includes","addDmListener","_this9","findIndex","removeEventListener","_this10","_this11","_this12","_this13","setMuted","_this14","_this15","toggleMuted","_this16","paused","_this17","setFullscreen","_this18","_this19","_this20","_this21","_this22","watchOnSite","FlowPlayerProvider","videoUrl","fpListeners","fpCSSUrl","jqueryUrl","fpUrl","fpPlayer","isPlayed","fireFirstPlay","createFP","clip","sources","isFullscreen","jqueryPromise","fpPromise","fpCSSPromise","link","href","rel","flowplayer","FP","divElement","params","_this$fpPlayer$video","time","addFPListener","resume","toggle","VimeoProvider","Unsupported","vmPlayer","vmListeners","createVM","getVolume","Vimeo","Player","mod","default","loadSdk","percent","destroy","addVmListener","unload","getPaused","getCurrentTime","current","setCurrentTime","getVideoUrl","YTSTATES","_eventsNameMapping","defineProperty_default","YoutubeProvider","ytPlayer","fakeProgressListener","createYT","AYT","addProgressFakeListener","total","progress","setInterval","asyncToGenerator_default","regenerator_default","a","_callee","_context","getDuration","clearInterval","playVideo","pauseVideo","stopVideo","unMute","bool","getPlayerState","seekTo","oneOfType","typesArray","some","ValidateObj","schema","position","aliases","k","alias","types","split","ValidateArg","ValidateOptionalArg","_len3","_key3","provider","createPlayer","FlowplayerProvider","toggleMute","toggleFullScreen","togglePlay","forward","rewind","clear","download","src_VideoPlayer","defaults","idPrefix","playerInstances","idOrUrl","affix","generateId","playerInitOptions","playerOptions","filter","events","playerId","getPlayer","clearPromises","map","__webpack_exports__","src_Player","VideoPlayer"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VideoPlayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VideoPlayer\"] = factory();\n\telse\n\t\troot[\"VideoPlayer\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"1\":\"vendors~Vimeo\",\"2\":\"vendors~Youtube\"}[chunkId]||chunkId) + \".chunk.\" + {\"1\":\"d3d17fce\",\"2\":\"e057cbf6\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonpVideoPlayer\"] = window[\"webpackJsonpVideoPlayer\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nmodule.exports = _applyDecoratedDescriptor;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"regenerator-runtime\");\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * @ignore\n */\nexport default class TestProvider {\n    id = null;\n\n    iframeElement = null;\n\n    iframeDoc = null;\n\n    iframeContentWindow = null;\n\n    isMuted = false;\n\n    isFullScreen = false;\n\n    listeners = {};\n\n    parent = null;\n\n    /**\n     *Creates an instance of TestProvider.\n     * @param {Object} options\n     * @param {String} id\n     * @memberof TestProvider\n     */\n    constructor(options, id) {\n        this.id = id;\n\n        this.iframeElement = document.createElement('iframe');\n\n        this.iframeElement.id = id;\n\n        if (typeof options.domNode === 'string') {\n            if (options.domNode.indexOf('#') === 0) {\n                this.parent = document.querySelector(options.domNode);\n                this.parent.appendChild(this.iframeElement);\n            } else {\n                this.parent = document.getElementById(options.domNode);\n                this.parent.appendChild(this.iframeElement);\n            }\n        } else {\n            this.parent = options.domNode;\n            this.parent.appendChild(this.iframeElement);\n        }\n\n\n        this.iframeDoc = this.iframeElement.contentDocument\n                         || this.iframeElement.contentWindow.document;\n\n        this.iframeContentWindow = this.iframeElement.contentWindow;\n\n        this.iframeDoc.open();\n        this.iframeDoc.write('<html>'\n        + '<body>'\n        + '<video width=\"200\" controls>'\n        + '<source src=\"http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_60fps_normal.mp4\" type=\"video/mp4\">'\n        + '<source src=\"http://distribution.bbb3d.renderfarming.net/video/mp4/bbb_sunflower_1080p_60fps_normal.ogg\" type=\"video/ogg\">'\n        + 'Your browser does not support HTML5 video.'\n        + '</video>'\n        + '</body>'\n        + '</html>');\n\n        this.iframeDoc.close();\n\n        const [videoBBB] = this.iframeDoc.getElementsByTagName('video');\n\n        this.iframeContentWindow.addEventListener('message', (receivedMessage) => {\n            console.log([`iframe: ${id}`, 'received', receivedMessage]);\n\n            const message = JSON.parse(receivedMessage.data);\n\n            switch (message.command) {\n            case 'play':\n                videoBBB.play();\n\n                this.fireEvent('play');\n                break;\n            case 'pause':\n                videoBBB.pause();\n\n                this.fireEvent('pause');\n                break;\n            case 'stop':\n                videoBBB.pause();\n                videoBBB.currentTime = 0;\n\n                this.fireEvent('stop');\n                break;\n            case 'mute':\n                videoBBB.muted = true;\n\n                this.fireEvent('mute');\n                break;\n            case 'unmute':\n                videoBBB.muted = false;\n\n                this.fireEvent('unmute');\n                break;\n            case 'enterFullScreen':\n                if (videoBBB.requestFullscreen) {\n                    videoBBB.requestFullscreen();\n                } else if (videoBBB.mozRequestFullScreen) {\n                    videoBBB.mozRequestFullScreen();\n                } else if (videoBBB.webkitRequestFullscreen) {\n                    videoBBB.webkitRequestFullscreen();\n                } else if (videoBBB.msRequestFullscreen) {\n                    videoBBB.msRequestFullscreen();\n                }\n\n                this.fireEvent('enterFullScreen');\n                break;\n            case 'exitFullScreen':\n                if (this.iframeDoc.mozCancelFullScreen) {\n                    this.iframeDoc.mozCancelFullScreen();\n                } else if (this.iframeDoc.webkitCancelFullScreen) {\n                    this.iframeDoc.webkitCancelFullScreen();\n                } else {\n                    document.exitFullscreen();\n                }\n\n                this.fireEvent('exitFullScreen');\n                break;\n            case 'setVolume':\n                videoBBB.volume = message.value;\n\n                this.fireEvent('setVolume');\n                break;\n            case 'forward':\n                videoBBB.currentTime += message.value;\n\n                this.fireEvent('forward');\n                break;\n            case 'rewind':\n                videoBBB.currentTime -= message.value;\n\n                this.fireEvent('rewind');\n                break;\n            case 'seek':\n                videoBBB.currentTime = message.value;\n\n                this.fireEvent('seek');\n                break;\n            case 'destroy':\n                this.parent.removeChild(this.iframeElement);\n\n                this.fireEvent('destroy');\n                break;\n            default:\n                console.log('unknown message', receivedMessage.data);\n            }\n        });\n\n        this.on('destroy', () => {\n            console.log(`player ${this.id} destroyed`);\n\n            this.id = null;\n            this.iframeDoc = null;\n            this.iframeContentWindow = null;\n            this.isMuted = false;\n            this.isFullScreen = false;\n            this.listeners = {};\n            this.parent = null;\n        });\n    }\n\n    fireEvent(evt) {\n        if (typeof this.listeners[evt] !== 'undefined') {\n            this.listeners[evt].forEach((callbackFunction) => {\n                callbackFunction();\n            });\n        }\n    }\n\n    on(event, cb) {\n        if (typeof this.listeners[event] === 'undefined') {\n            this.listeners[event] = [];\n        }\n\n        this.listeners[event].unshift(cb);\n\n        return cb;\n    }\n\n    off(event, cb) {\n        // TODO;\n        console.log('off', event, cb);\n        if (this.listeners[event] && this.listeners[event].indexOf(cb) > -1) {\n            const index = this.listeners[event].indexOf(cb);\n            this.listeners[event].splice(index, 1);\n        }\n    }\n\n    getListeners(evt) {\n        if (typeof evt === 'string') {\n            if (typeof this.listeners[evt] !== 'undefined') {\n                return this.listeners[evt];\n            }\n\n            return [];\n        }\n\n        return this.listeners;\n    }\n\n    play() {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'play' }), window.location.origin);\n    }\n\n    pause() {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'pause' }), window.location.origin);\n    }\n\n    stop() {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'stop' }), window.location.origin);\n    }\n\n    mute() {\n        this.isMuted = true;\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'mute' }), window.location.origin);\n    }\n\n    unmute() {\n        this.isMuted = false;\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'unmute' }), window.location.origin);\n    }\n\n    toggleMute() {\n        if (this.isMuted) {\n            this.isMuted = false;\n            this.unmute();\n        } else {\n            this.isMuted = true;\n            this.mute();\n        }\n    }\n\n    toggleFullScreen() {\n        if (this.isFullScreen) {\n            this.isFullScreen = false;\n            this.iframeContentWindow.postMessage(JSON.stringify({ command: 'exitFullScreen' }), window.location.origin);\n        } else {\n            this.isFullScreen = true;\n            this.iframeContentWindow.postMessage(JSON.stringify({ command: 'enterFullScreen' }), window.location.origin);\n        }\n    }\n\n    togglePlay() {\n        //\n    }\n\n    download() {\n        //\n    }\n\n    setVolume(volumeLevel) {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'setVolume', value: volumeLevel }), window.location.origin);\n    }\n\n    forward(seconds) {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'forward', value: seconds }), window.location.origin);\n    }\n\n    rewind(seconds) {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'rewind', value: seconds }), window.location.origin);\n    }\n\n    seek(seconds) {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'seek', value: seconds }), window.location.origin);\n    }\n\n    clear() {\n        this.iframeContentWindow.postMessage(JSON.stringify({ command: 'destroy' }), window.location.origin);\n    }\n}\n","export default (domNode) => {\n    if (typeof domNode === 'string') {\n        if (domNode.indexOf('#') === 0) {\n            return document.querySelector(domNode);\n        }\n        return document.getElementById(domNode);\n    }\n    return domNode;\n};\n","export default url => new Promise((resolve, reject) => {\n    if (typeof url === 'string') {\n        const head = document.head || document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n\n        script.src = url;\n        script.async = true;\n        script.type = 'text/javascript';\n\n        script.onload = () => {\n            script.onerror = null;\n            script.onload = null;\n\n            resolve(null, script);\n        };\n\n        script.onerror = () => {\n            script.onerror = null;\n            script.onload = null;\n\n            reject(new Error(`Failed to load: ${url}`), script);\n        };\n\n        head.appendChild(script);\n    }\n});","/* eslint-disable func-names */\n\nexport default (...fields) => function (target, key, descriptor) {\n    if (descriptor) {\n        const fn = descriptor.value;\n        descriptor.value = function (...args) {\n            console.warn(`Provider ${target.constructor.name} does not support the ${key} feature`);\n            return fn.call(this, ...args);\n        };\n    } else {\n        fields.forEach((field) => {\n            target.prototype[field] = () => {\n                console.warn(`Provider ${target.constructor.name} does not support the ${field} feature`);\n            };\n        });\n    }\n};\n","\nexport default {\n    DMSDK: null,\n    FPSDK: null,\n    VMSDK: null,\n    YTSDK: null,\n};\n","import { getDomNode, loadScript } from '../../lib';\nimport global from '../../global';\n\nconst sdkCdn = 'https://api.dmcdn.net/all.js';\nglobal.DMSDK = null;\n\nconst eventsNameMapping = {\n    end: 'video_end',\n    playbackProgress: 'timeupdate',\n    loadProgress: 'progress',\n    seek: 'seeked',\n    setVolume: 'volumechange',\n    buffering: 'waiting',\n    firstPlay: 'start',\n};\n\nconst eventsToIgnore = [\n    'playbackProgress25',\n    'playbackProgress50',\n    'playbackProgress75'\n];\n\n/**\n * Dailymotion Player Wrapper\n *\n * @class DailymotionProvider\n */\nclass DailymotionProvider {\n    /**\n     * Internal player id\n     */\n    id = null;\n\n    /**\n     * DOM Node id, where to mount the DM iframe\n     */\n    domNodeId = null;\n\n    /**\n     * The DM Player instance\n     */\n    dmPlayer = null;\n\n    /**\n     * All registered internalListeners grouped by event:\n     * {\n     *     play: [\n     *         {callback: fn(), once: false}\n     *     ]\n     * }\n     * once flag: if true, the callback is fired once and then removed\n     */\n    internalListeners = {};\n\n    /**\n     * Internal event mapping to the DM Player events, grouped by event\n     * the event callback will fire all registered event internalListeners of this.internalListeners\n     */\n    dmListeners = {};\n\n    /**\n     * Promise resolved when the DM Player is ready to accept API calls\n     */\n    ready = null;\n\n    /**\n     * Keep track of playback progress percentage, used to fire playback percentage events\n     * @type {{'25': boolean, '50': boolean, '75': boolean}}\n     */\n    timeupdatePercentages = {\n        25: false,\n        50: false,\n        75: false,\n    };\n\n    /**\n     * Return all the registered internalListeners grouped by their event\n     *\n     */\n    get listeners() {\n        return this.internalListeners;\n    }\n\n    /**\n     * Get video Muted status\n     *\n     */\n    get isMuted() {\n        return this.ready.then(() => this.dmPlayer.muted);\n    }\n\n    /**\n     * Get video Fullscreen status\n     *\n     */\n    get isFullScreen() {\n        return this.ready.then(() => this.dmPlayer.fullscreen);\n    }\n\n    /**\n     *\n     * @param options\n     * @param id\n     */\n    constructor(options, id) {\n        this.id = id;\n\n        this.ready = this.createDM(options.domNode,\n            Object.assign({}, { video: options.videoId }, options.providerOptions || {}));\n    }\n\n    /**\n     * Load the DM SDK if not loaded yet\n     * If multiple instances of this provider exists in the same page,\n     * only one SDK is loaded and shared between all instances\n     *\n     * @return {Promise<any>}\n     */\n    loadSDK() {\n        if (!global.DMSDK) {\n            if (typeof window.DM === 'object' && typeof window.DM.player === 'function') {\n                global.DMSDK = Promise.resolve(window.DM);\n            } else {\n                global.DMSDK = new Promise((resolve, reject) => {\n                    loadScript(sdkCdn).then(() => resolve(window.DM))\n                        .catch(err => reject(err));\n                });\n            }\n        }\n        return global.DMSDK;\n    }\n\n    /**\n     * Create the DM Player in the given DOM Node with the given options\n     * When the Player is ready, resolve the this.ready Promise\n     *\n     * @param domNode\n     * @param options\n     * @return {Promise<any>}\n     */\n    createDM(domNode, options) {\n        return new Promise((resolve, reject) => {\n            this.loadSDK().then((DM) => {\n                domNode = getDomNode(domNode);\n                const iframe = document.createElement('iframe');\n                iframe.setAttribute('id', this.id);\n                domNode.appendChild(iframe);\n                this.domNodeId = iframe.id;\n                this.dmPlayer = DM.player(iframe, options);\n                this.dmPlayer.addEventListener('apiready', () => resolve());\n                this.registerDefaultListeners();\n            }).catch(err => reject(err));\n        });\n    }\n\n    /**\n     * Create a callback function that fires all registered internalListeners for a given event\n     * Store the callback in the this.dmListeners object\n     *\n     * @param evt\n     * @return {function(): void}\n     */\n    addDmListener(evt) {\n        const callback = () => this.fireEvent(evt);\n        this.dmListeners[evt] = callback;\n        return callback;\n    }\n\n    /**\n     * Fire all internalListeners for a given event\n     * if a fired listener is flagged as once,\n     * immediately deregister it after its fire (fired only once)\n     *\n     * @param evt\n     */\n    fireEvent(evt) {\n        if (typeof this.internalListeners[evt] !== 'undefined') {\n            this.internalListeners[evt].forEach((event) => {\n                if (typeof event.callback === 'function') {\n                    event.callback();\n                }\n                if (event.once) {\n                    this.off(evt, event.callback);\n                }\n            });\n        }\n    }\n\n    /**\n     * Given a percentage (one of the this.timeupdatePercentages keys)\n     * check if the video playback reached that percentage of completion,\n     * if yes, fire the playbackProgress% event\n     *\n     * @param percentage\n     */\n    onPercentage(percentage) {\n        const { duration, currentTime } = this.dmPlayer;\n        if (Math.floor((duration / 100) * percentage) === Math.floor(currentTime)) {\n            if (!this.timeupdatePercentages[percentage]) {\n                this.timeupdatePercentages[percentage] = true;\n                this.fireEvent(`playbackProgress${percentage}`);\n            }\n        } else {\n            this.timeupdatePercentages[percentage] = false;\n        }\n    }\n\n    /**\n     * Register default internalListeners on Player init\n     *\n     */\n    registerDefaultListeners() {\n        this.dmPlayer.addEventListener('timeupdate', () => {\n            this.onPercentage(25);\n            this.onPercentage(50);\n            this.onPercentage(75);\n        });\n    }\n\n    /**\n     * Remove the DM Player DOM Node\n     *\n     * @return {Promise<void>}\n     */\n    clear() {\n        return this.ready.then(() => {\n            document.getElementById(this.domNodeId).remove();\n            this.dmListeners = {};\n            this.internalListeners = {};\n        });\n    }\n\n    /**\n     * Add listener function to an event\n     * Register the function in the internal this.internalListeners object\n     * if there is no DM Player internalListeners for the requested event, register one\n     * When the DM Player fires the event,\n     * the registered callback will call all internalListeners associated with the event\n     *\n     * @param event\n     * @param callback\n     * @param once\n     * @return {Promise<void>}\n     */\n    on(event, callback, once = false) {\n        return this.ready.then(() => {\n            const eventName = eventsNameMapping[event]\n                || Object.values(eventsNameMapping).find(e => e === event)\n                || event;\n            if (typeof this.internalListeners[event] === 'undefined') {\n                this.internalListeners[event] = [];\n                if (!eventsToIgnore.includes(event)) {\n                    this.dmPlayer.addEventListener(eventName, this.addDmListener(event));\n                }\n            }\n            this.internalListeners[event].unshift({ callback, once });\n        });\n    }\n\n    /**\n     * Add a listener to an event,\n     * the listener will be fired only once\n     *\n     * @param event\n     * @param callback\n     * @return {Promise<void>}\n     */\n    one(event, callback) {\n        return this.on(event, callback, true);\n    }\n\n    /**\n     * Remove a listener from an event\n     * if the given listener is the last one for the given event\n     * remove also the relative DM Player event listener\n     *\n     * @param event\n     * @param callback\n     * @return {Promise<void>}\n     */\n    off(event, callback) {\n        return this.ready.then(() => {\n            if (this.internalListeners[event]) {\n                const index = this.internalListeners[event]\n                    .findIndex(evt => evt.callback === callback);\n                if (index > -1) {\n                    this.internalListeners[event].splice(index, 1);\n                }\n                if (!this.internalListeners[event].length && this.dmListeners[event]) {\n                    this.dmPlayer.removeEventListener(event, this.dmListeners[event]);\n                }\n            }\n        });\n    }\n\n    /**\n     * When DM Player is ready, send play command\n     *\n     * @return {Promise<any>}\n     */\n    play() {\n        return this.ready.then(() => this.dmPlayer.play());\n    }\n\n    /**\n     * When DM Player is ready, send pause command\n     *\n     * @return {Promise<any>}\n     */\n    pause() {\n        return this.ready.then(() => this.dmPlayer.pause());\n    }\n\n    /**\n     * When DM Player is ready, send pause and seek to 0 command\n     * @return {Promise<any>}\n     */\n    stop() {\n        return this.ready.then(() => {\n            this.dmPlayer.pause();\n            this.dmPlayer.seek(0);\n        });\n    }\n\n    /**\n     * When DM Player is ready, send command to mute\n     * @return {Promise<any>}\n     */\n    mute() {\n        return this.ready.then(() => this.dmPlayer.setMuted(true));\n    }\n\n    /**\n     * When DM Player is ready, send command to unmute\n     * @return {Promise<any>}\n     */\n    unmute() {\n        return this.ready.then(() => this.dmPlayer.setMuted(false));\n    }\n\n    /**\n     * When DM Player is ready, send command to toggle mute state\n     * @return {Promise<any>}\n     */\n    toggleMute() {\n        return this.ready.then(() => this.dmPlayer.toggleMuted());\n    }\n\n    togglePlay() {\n        return this.ready.then(() => {\n            if (this.dmPlayer.paused) {\n                return this.play();\n            }\n            return this.pause();\n        });\n    }\n\n    /**\n     * When DM Player is ready, send command to toggle fullScreen state\n     * @return {Promise<any>}\n     */\n    toggleFullScreen() {\n        return this.ready.then(() => this.dmPlayer.setFullscreen(!this.dmPlayer.fullscreen));\n    }\n\n    /**\n     * When DM Player is ready, send command to set volume\n     * volumeLevel can be a float from 0 to 1 or an integer from 0 to 100\n     * @param volumeLevel\n     * @return {Promise<any>}\n     */\n    setVolume(volumeLevel) {\n        if (volumeLevel > 1) {\n            volumeLevel /= 100;\n        }\n        return this.ready.then(() => this.dmPlayer.setVolume(volumeLevel));\n    }\n\n    /**\n     * When DM Player is ready, send command to seek to the current time plus the given seconds\n     * @param seconds\n     * @return {Promise<any>}\n     */\n    forward(seconds) {\n        return this.ready.then(() => this.dmPlayer.seek(this.dmPlayer.currentTime + seconds));\n    }\n\n    /**\n     * When DM Player is ready, send command to seek to the current time minus the given seconds\n     * @param seconds\n     * @return {Promise<any>}\n     */\n    rewind(seconds) {\n        return this.ready.then(() => this.dmPlayer.seek(this.dmPlayer.currentTime - seconds));\n    }\n\n    /**\n     * When DM Player is ready, send command to seek to the given seconds\n     * @param seconds\n     * @return {Promise<any>}\n     */\n    seek(seconds) {\n        return this.ready.then(() => this.dmPlayer.seek(seconds));\n    }\n\n    /**\n     * When DM Player is ready, send command to open the video on the Dailymotion website\n     * @return {Promise<any>}\n     */\n    download() {\n        return this.ready.then(() => this.dmPlayer.watchOnSite());\n    }\n}\n\nexport default DailymotionProvider;\n","import { loadScript, loadStyle, getDomNode } from '../../lib';\nimport global from '../../global';\n\n/*\n    ACCEPTED PROVIDER OPTIONS:\n    - aspectRatio: string width to height,\n    - autoplay: bool,\n    - debug: bool,\n    - fullscreen: bool,\n    - muted: bool,\n    - mutedAutoplay: bool,\n    - poster: url to image (placeholder),\n    - ratio: (integer),\n    - speeds: (array),\n    - seekStep: configure arrow key seek interval (bool or integer: s),\n    - storage: localstorage, in case of abuse of memory disable it using {},\n    - volume: (0 to 1),\n    - key: For commercial use (string),\n    - logo: (string or object)\n\n    for all the player options, please refer to https://flowplayer.com/help/developers/flowplayer-7/setup#player-options,\n    for all the player events, please refer to: https://flowplayer.com/help/developers/flowplayer-7/api#events,\n    for all the player commands, please refer to: https://flowplayer.com/help/developers/flowplayer-7/api\n*/\n\nconst eventsNameMapping = {\n    end: 'finish',\n    playbackProgress: 'progress',\n    loadProgress: 'buffer',\n    setVolume: 'volume',\n    play: 'resume',\n};\n\nconst eventsToIgnore = [\n    'playbackProgress25',\n    'playbackProgress50',\n    'playbackProgress75'\n];\n\n/**\n * Flowplayer Player Wrapper\n * @ignore\n * @class FlowplayerProvider\n */\nexport default class FlowPlayerProvider {\n    /**\n     * Internal player id\n     */\n    id = null;\n\n    /**\n     * Video src url\n     */\n    videoUrl = null;\n\n    /**\n     * DOM Node id, where to mount the Flowplayer videplayer\n     */\n    domNodeId = null;\n\n    /**\n     *  The id of a video\n     */\n    videoId = null;\n\n    /**\n     * All registered internalListeners grouped by event:\n     * {\n     *     play: [\n     *         {callback: fn(), once: false}\n     *     ]\n     * }\n     * once flag: if true, the callback is fired once and then removed\n     */\n    internalListeners = {};\n\n    /**\n     * Internal event mapping to the flowplayer Player events, grouped by event\n     * the event callback will fire all registered event internalListeners of this.internalListeners\n     */\n    fpListeners = {};\n\n    /**\n     * Promise resolved when the Flowplayer Player is ready to accept API calls\n     */\n    ready = null;\n\n    /**\n     * CSS url of flowplayer, can also be custom, must be implemented\n     */\n    fpCSSUrl = 'https://releases.flowplayer.org/7.2.7/skin/skin.css';\n\n    /**\n     * Flowplayer needs jquery, it's url is specified here\n     */\n    jqueryUrl = 'https://code.jquery.com/jquery-1.12.4.min.js';\n\n\n    /**\n     * Flowplayer JS url\n     */\n    fpUrl = 'https://releases.flowplayer.org/7.2.7/flowplayer.min.js';\n\n    /**\n     * The Flowplayer Player instance\n     */\n    fpPlayer = null;\n\n    /**\n     * Keep track of playback progress percentage, used to fire playback percentage events\n     * @type {{'25': boolean, '50': boolean, '75': boolean}}\n     */\n    timeupdatePercentages = {\n        25: false,\n        50: false,\n        75: false,\n    };\n\n    /**\n    * Used for first play event\n    */\n    isPlayed = false;\n\n    /**\n     * Return all the registered internalListeners grouped by their event\n     */\n    get listeners() {\n        return this.internalListeners;\n    }\n\n    /**\n     * Get video muted status\n     */\n    get isMuted() {\n        return this.ready.then(() => this.fpPlayer.muted);\n    }\n\n    /**\n     * Get video fullscreen status\n     */\n    get isFullScreen() {\n        return this.ready.then(() => this.fpPlayer.isFullscreen);\n    }\n\n    constructor(options, id) {\n        this.id = id;\n        this.videoId = options.videoId;\n\n        if (typeof options.url !== 'undefined') {\n            this.videoUrl = options.url;\n        } else {\n            // GENERATE URL\n        }\n\n        this.ready = this.createFP(options.domNode,\n            Object.assign({}, {\n                clip: {\n                    videoId: options.videoId,\n                    sources: [{\n                        type: 'video/mp4',\n                        src: this.videoUrl\n                    }]\n                }\n            },\n            options.providerOptions || {}));\n    }\n\n    /**\n     * Load the Flowplayer SDK if not loaded yet\n     * If multiple instances of this provider exists in the same page,\n     * only one SDK is loaded and shared between all instances\n     */\n    loadSDK() {\n        if (!global.FPSDK) {\n            const jqueryPromise = loadScript(this.jqueryUrl);\n\n            const fpPromise = loadScript(this.fpUrl);\n\n            const fpCSSPromise = loadStyle(this.fpCSSUrl);\n\n            if (typeof window.flowplayer === 'function') {\n                global.FPSDK = Promise.resolve(window.flowplayer);\n            } else {\n                global.FPSDK = Promise.all([jqueryPromise, fpPromise, fpCSSPromise])\n                    .then(() => window.flowplayer)\n                    .catch((err) => {\n                        throw err;\n                    });\n            }\n        }\n\n        return global.FPSDK;\n    }\n\n    /**\n     * Create the Flowplayer Player in the given DOM Node with the given options\n     * When the Player is ready, resolve the this.ready Promise\n     * domNode: id of the container, or a domNode, or a query selector element\n     * options: provider options of the player\n     */\n    createFP(domNode, options) {\n        return new Promise((resolve, reject) => {\n            this.loadSDK().then((FP) => {\n                if (typeof FP === 'function') {\n                    const divElement = document.createElement('div');\n\n                    domNode = getDomNode(domNode);\n                    divElement.setAttribute('id', this.id);\n                    domNode.appendChild(divElement);\n\n                    this.domNodeId = divElement.id;\n                    this.fpPlayer = FP(divElement, options);\n                    this.fpPlayer.on('ready', () => resolve());\n\n                    this.registerDefaultListeners();\n                } else {\n                    throw new Error('Unable to laod flowplayer');\n                }\n            }).catch(err => reject(err));\n        });\n    }\n\n    /**\n     * Create a callback function that fires all registered internalListeners for a given event\n     * Store the callback in the this.fpListeners object\n     */\n    addFPListener(evt) {\n        const callback = () => this.fireEvent(evt);\n        this.fpListeners[evt] = callback;\n        return callback;\n    }\n\n    /**\n     * Fire all internalListeners for a given event\n     * if a fired listener is flagged as once,\n     * immediately deregister it after its fire (fired only once)\n     */\n    fireEvent(evt, params) {\n        if (typeof this.internalListeners[evt] !== 'undefined') {\n            this.internalListeners[evt].forEach((event) => {\n                if (typeof event.callback === 'function') {\n                    event.callback(params);\n                }\n                if (event.once) {\n                    this.off(evt, event.callback);\n                }\n            });\n        }\n    }\n\n    /**\n     * Given a percentage (one of the this.timeupdatePercentages keys)\n     * check if the video playback reached that percentage of completion,\n     * if yes, fire the playbackProgress% event\n     */\n    onPercentage(percentage) {\n        const { duration, time } = this.fpPlayer.video;\n\n        if (Math.floor((duration / 100) * percentage) === Math.floor(time)) {\n            if (!this.timeupdatePercentages[percentage]) {\n                this.timeupdatePercentages[percentage] = true;\n                this.fireEvent(`playbackProgress${percentage}`);\n            }\n        } else {\n            this.timeupdatePercentages[percentage] = false;\n        }\n    }\n\n    /**\n     * Fire the first play event (if played has not been started before)\n     */\n    fireFirstPlay = () => {\n        if (!this.isPlayed) {\n            this.fireEvent('firstPlay');\n            this.isPlayed = true;\n\n            this.off('resume', this.fireFirstPlay);\n        }\n    };\n\n    /**\n     * Register default internalListeners on Player init\n     */\n    registerDefaultListeners() {\n        this.fpPlayer.on('progress', () => {\n            this.onPercentage(25);\n            this.onPercentage(50);\n            this.onPercentage(75);\n        });\n\n        this.fpPlayer.on('resume', this.fireFirstPlay);\n    }\n\n    /**\n     * Remove the Flowplayer Player DOM Node, and clear all the status and listeners\n     */\n    clear() {\n        return this.ready.then(() => {\n            document.getElementById(this.domNodeId).remove();\n            this.fpListeners = {};\n            this.internalListeners = {};\n        });\n    }\n\n    /**\n     * Add listener function to an event\n     * Register the function in the internal this.internalListeners object\n     * if there is no Flowplayer Player internalListeners for the requested event, register one\n     * When the Flowplayer Player fires the event,\n     * the registered callback will call all internalListeners associated with the event\n     */\n    on(event, callback, once = false) {\n        return this.ready.then(() => {\n            const eventName = eventsNameMapping[event] || Object.values(eventsNameMapping).find(e => e === 'event') || event;\n\n            if (typeof this.internalListeners[event] === 'undefined') {\n                this.internalListeners[event] = [];\n\n                if (!eventsToIgnore.includes(event)) {\n                    this.fpPlayer.on(eventName, this.addFPListener(event));\n                }\n            }\n\n            this.internalListeners[event].unshift({ callback, once });\n        });\n    }\n\n    /**\n     * Add a listener to an event,\n     * the listener will be fired only once\n     */\n    one(event, callback) {\n        return this.on(event, callback, true);\n    }\n\n    /**\n     * Remove a listener from an event\n     * if the given listener is the last one for the given event\n     * remove also the relative Flowplayer Player event listener\n     */\n    off(event, callback) {\n        return this.ready.then(() => {\n            if (this.internalListeners[event]) {\n                const index = this.internalListeners[event]\n                    .findIndex(evt => evt.callback === callback);\n                if (index > -1) {\n                    this.internalListeners[event].splice(index, 1);\n                }\n                if (!this.internalListeners[event].length && this.fpListeners[event]) {\n                    this.fpPlayer.off(event, this.fpListeners[event]);\n                }\n            }\n        });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send play command\n     */\n    play() {\n        return this.ready.then(() => { this.fpPlayer.resume(); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send pause command\n     */\n    pause() {\n        return this.ready.then(() => { this.fpPlayer.pause(); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send togglePlay command\n     */\n    togglePlay() {\n        return this.ready.then(() => { this.fpPlayer.toggle(); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send stop command\n     */\n    stop() {\n        return this.ready.then(() => {\n            this.fpPlayer.stop();\n            this.isPlayed = false;\n            this.fpPlayer.on('resume', this.fireFirstPlay);\n        });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send mute command\n     */\n    mute() {\n        return this.ready.then(() => { this.fpPlayer.mute(true); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send unmute command\n     */\n    unmute() {\n        return this.ready.then(() => { this.fpPlayer.mute(false); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send togglemute command\n     */\n    toggleMute() {\n        return this.ready.then(() => { this.fpPlayer.mute(); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, send togglefullscreen command\n     */\n    toggleFullScreen() {\n        return this.ready.then(() => { this.fpPlayer.fullscreen(); });\n    }\n\n    /**\n     * When Flowplayer Player is ready, set the volume to a given percentage\n     */\n    setVolume(volumeLevel) {\n        if (volumeLevel > 1) {\n            volumeLevel /= 100;\n        }\n\n        return this.ready.then(() => this.fpPlayer.volume(volumeLevel));\n    }\n\n    /**\n     * When Flowplayer Player is ready, go forward from current time to given seconds\n     */\n    forward(seconds) {\n        return this.ready.then(() => {\n            this.fpPlayer.seek(this.fpPlayer.video.time + seconds);\n        });\n    }\n\n    /**\n     * When Flowplayer Player is ready, rewind from current time to given seconds\n     */\n    rewind(seconds) {\n        return this.ready.then(() => {\n            this.fpPlayer.seek(this.fpPlayer.video.time - seconds);\n        });\n    }\n\n    /**\n     * When Flowplayer Player is ready, set the current time to a specified time (in seconds)\n     */\n    seek(seconds) {\n        return this.ready.then(() => { this.fpPlayer.seek(seconds); });\n    }\n\n    /**\n     * start download flow\n     */\n    download() {\n        // to implement;\n    }\n}\n","export default url => new Promise((resolve, reject) => {\n    if (typeof url === 'string') {\n        const head = document.head || document.getElementsByTagName('head')[0];\n        const link = document.createElement('link');\n\n        link.href = url;\n        link.rel = 'stylesheet';\n\n        link.onload = () => {\n            link.onerror = null;\n            link.onload = null;\n\n            resolve(null, link);\n        };\n\n        link.onerror = () => {\n            link.onerror = null;\n            link.onload = null;\n\n            reject(new Error(`Failed to load: ${url}`), link);\n        };\n\n        head.appendChild(link);\n    }\n});","import getDomNode from '../../lib/getDomNode';\nimport Unsupported from '../../lib/unsupported';\nimport global from '../../global';\n\nconst eventsNameMapping = {\n    end: 'ended',\n    playbackProgress: 'timeupdate',\n    loadProgress: 'progress',\n    seek: 'seeked',\n    setVolume: 'volumechange',\n    buffering: 'bufferstart',\n};\n\nconst eventsToIgnore = [\n    'playbackProgress25',\n    'playbackProgress50',\n    'playbackProgress75',\n    'firstPlay',\n];\n\n/**\n * Vimeo Player Wrapper\n * @ignore\n * @class VimeoProvider\n */\n@Unsupported('toggleFullScreen')\nclass VimeoProvider {\n    /**\n     * Internal player id\n     */\n    id = null;\n\n    /**\n     * The Vimeo Player instance\n     */\n    vmPlayer = null;\n\n    /**\n     * All registered listeners grouped by event:\n     * {\n     *     play: [\n     *         {callback: fn(), once: false}\n     *     ]\n     * }\n     * once flag: if true, the callback is fired once and then removed\n     */\n    internalListeners = {};\n\n    /**\n     * Internal event mapping to the Vimeo Player events, grouped by event\n     * the event callback will fire all registered event listeners of this.internalListeners\n     */\n    vmListeners = {};\n\n    /**\n     * Promise resolved when the Vimeo SDK is loaded and the Vimeo Player is ready\n     */\n    ready = null;\n\n    isPlayed = false;\n\n    /**\n     * Get video Muted status\n     * @return Promise\n     */\n    get isMuted() {\n        return this.ready.then(() => this.vmPlayer.getVolume())\n            .then(volume => volume <= 0);\n    }\n\n    /**\n     * Return all the registered listeners grouped by their event\n     */\n    get listeners() {\n        return this.internalListeners;\n    }\n\n    /**\n     * Keep track of playback progress percentage, used to fire playback percentage events\n     * @type {{'25': boolean, '50': boolean, '75': boolean}}\n     */\n    timeupdatePercentages = {\n        25: false,\n        50: false,\n        75: false,\n    };\n\n\n    constructor(options, id) {\n        this.id = id;\n\n        this.ready = this.createVM(options.domNode,\n            Object.assign({ id: options.videoId }, options.providerOptions || {}));\n    }\n\n    /**\n     * Load the Vimeo SDK if not loaded yet\n     * If multiple instances of this provider exists in the same page,\n     * only one SDK is loaded and shared between all instances\n     */\n    loadSdk() {\n        if (!global.VMSDK) {\n            if (typeof window.Vimeo === 'object' && typeof window.Vimeo.Player === 'function') {\n                global.VMSDK = Promise.resolve(window.Vimeo.Player);\n            } else {\n                global.VMSDK = import(/* webpackChunkName: 'Vimeo' */'@vimeo/player').then((mod) => {\n                    window.Vimeo = {\n                        Player: mod.default,\n                    };\n                    return window.Vimeo.Player;\n                });\n            }\n        }\n        return global.VMSDK;\n    }\n\n    /**\n     * Create the Vimeo Player in the given DOM Node with the given options\n     * When the Player is ready, resolve the this.ready Promise\n     * @param domNode\n     * @param options\n     * @return {Promise<any>}\n     */\n    createVM(domNode, options) {\n        return new Promise((resolve, reject) => {\n            this.loadSdk().then((Player) => {\n                domNode = getDomNode(domNode);\n                this.vmPlayer = new Player(domNode, options);\n                this.registerDefaultListeners();\n                resolve();\n            }).catch(err => reject(err));\n        });\n    }\n\n    /**\n     * Create a callback function that fires all registered listeners for a given event\n     * Store the callback in the this.vmListeners object\n     * @param evt\n     * @return {function(): void}\n     */\n    addVmListener(evt) {\n        const callback = (...data) => this.fireEvent(evt, ...data);\n        this.vmListeners[evt] = callback;\n        return callback;\n    }\n\n    /**\n     * Fire all listeners for a given event\n     * if a fired listener is flagged as once,\n     * immediately deregister it after its fire (fired only once)\n     * @param evt\n     * @param data\n     */\n    fireEvent(evt, ...data) {\n        if (typeof this.internalListeners[evt] !== 'undefined') {\n            this.internalListeners[evt].forEach((event) => {\n                if (typeof event.callback === 'function') {\n                    event.callback(...data);\n                }\n                if (event.once) {\n                    this.off(evt, event.callback);\n                }\n            });\n        }\n    }\n\n    /**\n     * Given a percentage (one of the this.timeupdatePercentages keys)\n     * check if the video playback reached that percentage of completion,\n     * if yes, fire the playbackProgress% event\n     * @param percentage\n     * @param data\n     */\n    onPercentage(percentage, data) {\n        if (Math.floor(data.percent * 100) === percentage) {\n            if (!this.timeupdatePercentages[percentage]) {\n                this.timeupdatePercentages[percentage] = true;\n                this.fireEvent(`playbackProgress${percentage}`, data);\n            }\n        } else {\n            this.timeupdatePercentages[percentage] = false;\n        }\n    }\n\n    fireFirstPlay = () => {\n        if (!this.isPlayed) {\n            this.fireEvent('firstPlay');\n            this.isPlayed = true;\n\n            this.off('play', this.fireFirstPlay);\n        }\n    };\n\n    /**\n     * Register default listeners on Player init\n     */\n    registerDefaultListeners() {\n        this.vmPlayer.on('timeupdate', (data) => {\n            this.onPercentage(25, data);\n            this.onPercentage(50, data);\n            this.onPercentage(75, data);\n        });\n        this.vmPlayer.on('play', this.fireFirstPlay);\n    }\n\n    /**\n     * Remove the Vimeo Player DOM Node\n     * @return Promise\n     */\n    clear() {\n        return this.ready.then(() => {\n            this.internalListeners = {};\n            this.vmListeners = {};\n            return this.vmPlayer.destroy();\n        });\n    }\n\n    /**\n     * Add listener function to an event\n     * Register the function in the internal this.internalListeners object\n     * if there is no Vimeo Player listeners for the requested event, register one\n     * When the Vimeo Player fires the event,\n     * the registered callback will call all listeners associated with the event\n     * @param event\n     * @param callback\n     * @param once\n     * @return Promise\n     */\n    on(event, callback, once = false) {\n        return this.ready.then(() => {\n            const eventName = eventsNameMapping[event]\n                || Object.values(eventsNameMapping).find(e => e === event)\n                || event;\n            if (typeof this.internalListeners[event] === 'undefined') {\n                this.internalListeners[event] = [];\n                if (!eventsToIgnore.includes(event)) {\n                    this.vmPlayer.on(eventName, this.addVmListener(event));\n                }\n            }\n            this.internalListeners[event].unshift({ callback, once });\n        });\n    }\n\n    /**\n     * Add a listener to an event,\n     * the listener will be fired only once\n     * @param event\n     * @param callback\n     * @return Promise\n     */\n    one(event, callback) {\n        return this.on(event, callback, true);\n    }\n\n    /**\n     * Remove a listener from an event\n     * if the given listener is the last one for the given event\n     * remove also the relative Vimeo Player event listener\n     * @param event\n     * @param callback\n     * @return Promise\n     */\n    off(event, callback) {\n        return this.ready.then(() => {\n            if (this.internalListeners[event]) {\n                const index = this.internalListeners[event]\n                    .findIndex(evt => evt.callback === callback);\n                if (index > -1) {\n                    this.internalListeners[event].splice(index, 1);\n                }\n                if (!this.internalListeners[event].length && this.vmListeners[event]) {\n                    this.vmPlayer.off(event, this.vmListeners[event]);\n                }\n            }\n        });\n    }\n\n    /**\n     * When Vimeo Player is ready, send play command\n     * @return Promise\n     */\n    play() {\n        return this.ready.then(() => this.vmPlayer.play());\n    }\n\n    /**\n     * When Vimeo Player is ready, send pause command\n     * @return Promise\n     */\n    pause() {\n        return this.ready.then(() => this.vmPlayer.pause());\n    }\n\n    /**\n     * When Vimeo Player is ready, send unload command (restore the video at the initial state)\n     * @return Promise\n     */\n    stop() {\n        return this.ready.then(() => {\n            this.isPlayed = false;\n            return this.vmPlayer.unload();\n        });\n    }\n\n    /**\n     * When Vimeo Player is ready, send setVolume to 0 command\n     * @return Promise\n     */\n    mute() {\n        return this.ready.then(() => this.vmPlayer.setVolume(0));\n    }\n\n    /**\n     * When Vimeo Player is ready, send setVolume to 1 command\n     * @return Promise\n     */\n    unmute() {\n        return this.ready.then(() => this.vmPlayer.setVolume(1));\n    }\n\n    /**\n     * When Vimeo Player is ready,\n     * check the current volume and send setVolume command with 1 or 0 to mute or unmute\n     * @return Promise\n     */\n    toggleMute() {\n        return this.ready\n            .then(() => this.vmPlayer.getVolume())\n            .then(volume => this.vmPlayer.setVolume(volume > 0 ? 0 : 1));\n    }\n\n    togglePlay() {\n        return this.ready\n            .then(() => this.vmPlayer.getPaused())\n            .then((paused) => {\n                if (paused) {\n                    return this.play();\n                }\n                return this.pause();\n            });\n    }\n\n    /**\n     * When Vimeo Player is ready, send setVolume command\n     * volumeLevel can be a float from 0 to 1 or an integer from 0 to 100\n     * @param volumeLevel\n     * @return Promise\n     */\n    setVolume(volumeLevel) {\n        if (volumeLevel > 1) {\n            volumeLevel /= 100;\n        }\n        return this.ready.then(() => this.vmPlayer.setVolume(volumeLevel));\n    }\n\n    /**\n     * When Vimeo Player is ready, send command to seek to the current time plus the given seconds\n     * @param seconds\n     * @return Promise\n     */\n    forward(seconds) {\n        return this.ready\n            .then(() => this.vmPlayer.getCurrentTime())\n            .then(current => this.vmPlayer.setCurrentTime(current + seconds));\n    }\n\n    /**\n     * When Vimeo Player is ready, send command to seek to the current time minus the given seconds\n     * @param seconds\n     * @return Promise\n     */\n    rewind(seconds) {\n        return this.ready\n            .then(() => this.vmPlayer.getCurrentTime())\n            .then(current => this.vmPlayer.setCurrentTime(current - seconds));\n    }\n\n    /**\n     * When Vimeo Player is ready, send command to seek to the given seconds\n     * @param seconds\n     * @return Promise\n     */\n    seek(seconds) {\n        return this.ready.then(() => this.vmPlayer.setCurrentTime(seconds));\n    }\n\n    /**\n     * When Vimeo Player is ready, send command to get the video url\n     * @return Promise\n     */\n    download() {\n        return this.ready.then(() => this.vmPlayer.getVideoUrl());\n    }\n}\n\nexport default VimeoProvider;\n","import { getDomNode, Unsupported } from '../../lib';\nimport global from '../../global';\n\nconst YTSTATES = {\n    END: 0,\n    PLAY: 1,\n    PAUSE: 2,\n    BUFFER: 3,\n};\n\nconst eventsNameMapping = {\n    [YTSTATES.END]: 'end',\n    [YTSTATES.PLAY]: 'play',\n    [YTSTATES.PAUSE]: 'pause',\n    [YTSTATES.BUFFER]: 'buffering',\n};\n\n/**\n * Youtube Player Wrapper\n * @ignore\n * @class YoutubeProvider\n */\n@Unsupported('toggleFullScreen')\nclass YoutubeProvider {\n    /**\n     * Internal player id\n     */\n    id = null;\n\n    /**\n     * The Youtube Player instance\n     */\n    ytPlayer = null;\n\n    /**\n     * All registered listeners grouped by event:\n     * {\n     *     play: [\n     *         {callback: fn(), once: false}\n     *     ]\n     * }\n     * once flag: if true, the callback is fired once and then removed\n     */\n    internalListeners = {};\n\n    /**\n     * Promise resolved when the Youtube library is loaded and the Youtube Player is ready\n     */\n    ready = null;\n\n    /**\n     * setInterval id to simulate the playback progress event,\n     * stored to remove the interval whan player is cleared\n     * @type {null}\n     */\n    fakeProgressListener = null;\n\n    /**\n     * Keep track of playback progress percentage, used to fire playback percentage events\n     * @type {{'25': boolean, '50': boolean, '75': boolean}}\n     */\n    timeupdatePercentages = {\n        25: false,\n        50: false,\n        75: false,\n    };\n\n    isPlayed = false;\n\n    /**\n     * Get video Muted status\n     * @return {Promise<boolean>}\n     */\n    get isMuted() {\n        return this.ready.then(() => this.ytPlayer.isMuted());\n    }\n\n    /**\n     * Return all the registered listeners grouped by their event\n     */\n    get listeners() {\n        return this.internalListeners;\n    }\n\n    constructor(options, id) {\n        this.id = id;\n\n        this.ready = this.createYT(options.domNode,\n            Object.assign({}, { videoId: options.videoId }, options.providerOptions || {}));\n        // .catch(console.error); // TODO what to do in error?\n    }\n\n    /**\n     * Load the Youtube library if not loaded yet\n     * If multiple instances of this provider exists in the same page,\n     * only one library is loaded and shared between all instances\n     */\n    loadSDK() {\n        if (!global.YTSDK) {\n            if (typeof window.AYT === 'object' && typeof window.AYT.Player === 'function') {\n                global.YTSDK = Promise.resolve(window.AYT.Player);\n            } else {\n                global.YTSDK = import(/* webpackChunkName: 'Youtube' */'youtube-player').then((mod) => {\n                    window.AYT = {\n                        Player: mod.default,\n                    };\n                    return window.AYT.Player;\n                });\n            }\n        }\n        return global.YTSDK;\n    }\n\n    /**\n     * Create the Youtube Player in the given DOM Node with the given options\n     * When the Player is ready, resolve the this.ready Promise\n     * @param domNode\n     * @param options\n     * @return {Promise<any>}\n     */\n    createYT(domNode, options) {\n        return new Promise((resolve, reject) => {\n            this.loadSDK().then((Player) => {\n                domNode = getDomNode(domNode);\n                this.ytPlayer = Player(domNode, options);\n                this.registerDefaultListeners();\n                this.addProgressFakeListener();\n                resolve();\n            }).catch(err => reject(err));\n        });\n    }\n\n    fireFirstPlay = () => {\n        if (!this.isPlayed) {\n            this.fireEvent('firstPlay');\n            this.isPlayed = true;\n\n            this.off('play', this.fireFirstPlay);\n        }\n    };\n\n    /**\n     * Register default listeners on Player init\n     * Youtube player has only one event (stateChange),\n     * we register a listener to that event\n     * and call the internal listeners based on the event.data value (eventsNameMapping)\n     */\n    registerDefaultListeners() {\n        this.ytPlayer.on('stateChange', (e) => {\n            if (eventsNameMapping[e.data]) {\n                this.fireEvent(eventsNameMapping[e.data], e);\n            }\n            if (e.data === YTSTATES.PLAY) { // Play event\n                this.fireFirstPlay();\n            }\n        });\n    }\n\n    /**\n     * Given a percentage (one of the this.timeupdatePercentages keys)\n     * check if the video playback reached that percentage of completion,\n     * if yes, fire the playbackProgress% event\n     * @param percentage\n     * @param data\n     */\n    onPercentage(percentage, data) {\n        if (Math.floor((data.total / 100) * percentage) === Math.floor(data.progress)) {\n            if (!this.timeupdatePercentages[percentage]) {\n                this.timeupdatePercentages[percentage] = true;\n                this.fireEvent(`playbackProgress${percentage}`, data);\n            }\n        } else {\n            this.timeupdatePercentages[percentage] = false;\n        }\n    }\n\n    /**\n     * Because of Youtube player lacks of playback progress event,\n     * we simulate it with an interval every 250ms\n     */\n    addProgressFakeListener() {\n        this.fakeProgressListener = setInterval(async () => {\n            const total = await this.ytPlayer.getDuration();\n            const progress = await this.ytPlayer.getCurrentTime();\n            this.onPercentage(25, { total, progress });\n            this.onPercentage(50, { total, progress });\n            this.onPercentage(75, { total, progress });\n        }, 250);\n    }\n\n    /**\n     * Fire all listeners for a given event\n     * if a fired listener is flagged as once,\n     * immediately deregister it after its fire (fired only once)\n     * @param evt\n     * @param data\n     */\n    fireEvent(evt, ...data) {\n        if (typeof this.internalListeners[evt] !== 'undefined') {\n            this.internalListeners[evt].forEach((event) => {\n                if (typeof event.callback === 'function') {\n                    event.callback(...data);\n                }\n                if (event.once) {\n                    this.off(evt, event.callback);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add listener function to an event\n     * Register the function in the internal this.internalListeners object\n     * When the Youtube Player fires the stateChange event with the event associated State,\n     * all listeners associated with the event will be called\n     * @param event\n     * @param callback\n     * @param once\n     * @return Promise\n     */\n    on(event, callback, once = false) {\n        return this.ready.then(() => {\n            if (typeof this.internalListeners[event] === 'undefined') {\n                this.internalListeners[event] = [];\n            }\n            this.internalListeners[event].unshift({ callback, once });\n        });\n    }\n\n    /**\n     * Add a listener to an event,\n     * the listener will be fired only once\n     * @param event\n     * @param callback\n     * @return Promise\n     */\n    one(event, callback) {\n        return this.on(event, callback, true);\n    }\n\n    /**\n     * Remove a listener from an event\n     * @param event\n     * @param callback\n     * @return Promise\n     */\n    off(event, callback) {\n        return this.ready.then(() => {\n            if (this.internalListeners[event]) {\n                const index = this.internalListeners[event]\n                    .findIndex(evt => evt.callback === callback);\n                if (index > -1) {\n                    this.internalListeners[event].splice(index, 1);\n                }\n            }\n        });\n    }\n\n    /**\n     * Remove the Youtube Player DOM Node\n     * @return Promise\n     */\n    clear() {\n        return this.ready.then(() => {\n            clearInterval(this.fakeProgressListener);\n            this.fakeProgressListener = null;\n            return this.ytPlayer.destroy();\n        });\n    }\n\n    /**\n     * When Youtube Player is ready, send playVideo command\n     * @return Promise\n     */\n    play() {\n        return this.ready.then(() => this.ytPlayer.playVideo());\n    }\n\n    /**\n     * When Youtube Player is ready, send pauseVideo command\n     * @return Promise\n     */\n    pause() {\n        return this.ready.then(() => this.ytPlayer.pauseVideo());\n    }\n\n    /**\n     * When Youtube Player is ready, send stopVideo command\n     * @return Promise\n     */\n    stop() {\n        return this.ready.then(() => {\n            this.isPlayed = false;\n            return this.ytPlayer.stopVideo();\n        });\n    }\n\n    /**\n     * When Youtube Player is ready, send mute command\n     * @return Promise\n     */\n    mute() {\n        return this.ready.then(() => this.ytPlayer.mute());\n    }\n\n    /**\n     * When Youtube Player is ready, send unMute command\n     * @return Promise\n     */\n    unmute() {\n        return this.ready.then(() => this.ytPlayer.unMute());\n    }\n\n    /**\n     * When Youtube Player is ready,\n     * check if video is currently muted, if so, send the unMute command\n     * else, send the mute command\n     * @return Promise\n     */\n    toggleMute() {\n        return this.ready.then(() => this.ytPlayer.isMuted())\n            .then((bool) => {\n                if (bool) {\n                    return this.ytPlayer.unMute();\n                }\n                return this.ytPlayer.mute();\n            });\n    }\n\n    togglePlay() {\n        return this.ready\n            .then(() => this.ytPlayer.getPlayerState())\n            .then((state) => {\n                if (state === YTSTATES.PLAY) {\n                    return this.ytPlayer.pauseVideo();\n                }\n                return this.ytPlayer.playVideo();\n            });\n    }\n\n    /**\n     * When Youtube Player is ready, send setVolume command\n     * volumeLevel must be an number from 0 to 100\n     * @param volumeLevel\n     * @return Promise\n     */\n    setVolume(volumeLevel) {\n        return this.ready.then(() => this.ytPlayer.setVolume(volumeLevel));\n    }\n\n    /**\n     * When Youtube Player is ready, send command to seek to the current time plus the given seconds\n     * @param seconds\n     * @return Promise\n     */\n    forward(seconds) {\n        return this.ready.then(() => this.ytPlayer.getCurrentTime())\n            .then(current => this.ytPlayer.seekTo(current + seconds));\n    }\n\n    /**\n     * When Youtube Player is ready,\n     * send command to seek to the current time minus the given seconds\n     * @param seconds\n     * @return Promise\n     */\n    rewind(seconds) {\n        return this.ready.then(() => this.ytPlayer.getCurrentTime())\n            .then(current => this.ytPlayer.seekTo(current - seconds));\n    }\n\n    /**\n     * When Youtube Player is ready, send command to seek to the given seconds\n     * @param seconds\n     * @return Promise\n     */\n    seek(seconds) {\n        return this.ready.then(() => this.ytPlayer.seekTo(seconds));\n    }\n\n    /**\n     * When Youtube Player is ready, send command to get the video url\n     * @return Promise\n     */\n    download() {\n        return this.ready.then(() => this.ytPlayer.getVideoUrl());\n    }\n}\n\nexport default YoutubeProvider;\n","/* eslint-disable func-names,valid-typeof,no-prototype-builtins */\nconst oneOfType = (value, typesArray) => typesArray.some(type => typeof value === type);\n\n/**\n * @ignore\n * Validate an Object argument, must match the given schema\n * @param {Object} schema The schema to match es:\n * {field: 'string'} (typeof argument.field === 'string')\n * @param {number} [position] argument position, default 0 (first argument)\n * @param {Object} [aliases] field name alias\n * @example\n * ValidateObj({x: 'number', y: 'string'})\n * someMethod(obj) { // Stuff... }\n *\n * someMethod({x: 2, y: 'foo'}) // Ok\n * someMethod({y: 'foo'}) // Throw Error 'Invalid object passed at index 0 for method \"someMethod\",\n * // field \"x\" is required'\n * someMethod(x: 2, y: true}) // Throw Error Invalid object passed at index 0 for method\n // \"someMethod\", field \"y\" does not have the right type\n // Expecting: string\n // Received: boolean\n * @return {function(*, *, *): *}\n * @constructor\n */\nexport function ValidateObj(schema, position = 0, aliases = {}) {\n    const keys = Object.keys(schema);\n    return function (target, key, descriptor) {\n        const fn = descriptor.value;\n        descriptor.value = function (...args) {\n            const obj = args[position];\n            if (typeof obj !== 'object') {\n                throw new Error(`Invalid argument passed at index ${position} for method \"${key}\"\n    Expecting: object\n    Received: ${typeof obj}`);\n            }\n            keys.forEach((k) => {\n                const alias = aliases[k];\n                let i = k;\n                if (!obj.hasOwnProperty(k)) {\n                    if (alias) {\n                        if (!obj.hasOwnProperty(alias)) {\n                            throw new Error(`Invalid object passed at index ${position} for method \"${key}\", field \"${k}\" or \"${alias}\" is required`);\n                        }\n                        i = alias;\n                    } else {\n                        throw new Error(`Invalid object passed at index ${position} for method \"${key}\", field \"${k}\" is required`);\n                    }\n                }\n                const types = schema[k].split('|');\n                if (!oneOfType(obj[i], types)) {\n                    throw new Error(`Invalid object passed at index ${position} for method \"${key}\", field \"${i}\" does not have the right type\n    Expecting: ${schema[k]}\n    Received: ${typeof obj[i]}`);\n                }\n            });\n            return fn.call(this, ...args);\n        };\n        return descriptor;\n    };\n}\n\n/**\n * @ignore\n * Validate method argument, can be chained for multiple arguments validation\n * @param {string} type typeof to match\n * @param {number} [position] argument position, default 0 (first argument)\n * @example\n * ValidateArg('string')\n * validateArg('boolean', 1)\n * someMethod(param1, param2) { // Stuff... }\n *\n * someMethod('foo', true) // Ok\n * someMethod('bar') // Throw Error 'Method \"someMethod\" is expecting 2 arguments, 1 passed'\n * someMethod(123, true) // Throw Error 'Invalid argument passed at index 0 for method \"someMethod\"\n * // Expecting: string Received: number'\n * @return {function(*, *, *): *}\n * @constructor\n */\nexport function ValidateArg(type, position = 0) {\n    return function (target, key, descriptor) {\n        const fn = descriptor.value;\n        descriptor.value = function (...args) {\n            if (args.length < fn.length) {\n                throw new Error(`Expecting ${fn.length} argument${fn.length > 1 ? 's' : ''}, ${args.length} passed`);\n            }\n            const types = type.split('|');\n            if (!oneOfType(args[position], types)) {\n                throw new Error(`Invalid argument passed at index ${position}\"\n    Expecting: ${type}\n    Received: ${typeof args[position]}`);\n            }\n            return fn.call(this, ...args);\n        };\n        return descriptor;\n    };\n}\n\nexport function ValidateOptionalArg(type, position = 0) {\n    return function (target, key, descriptor) {\n        const fn = descriptor.value;\n        descriptor.value = function (...args) {\n            if (args[position]) {\n                if (typeof args[position] !== type) {\n                    throw new Error(`Invalid argument passed at index ${position}\"\n    Expecting: ${type}\n    Received: ${typeof args[position]}`);\n                }\n            }\n            return fn.call(this, ...args);\n        };\n        return descriptor;\n    };\n}\n","import TestProvider from '../Provider/testProvider';\nimport DailymotionProvider from '../Provider/Dailymotion';\nimport FlowplayerProvider from '../Provider/Flowplayer';\nimport VimeoProvider from '../Provider/Vimeo';\nimport YoutubeProvider from '../Provider/Youtube';\nimport { ValidateArg, ValidateObj } from '../Validation';\n\n/**\n * This class will provide you a player instance. An instance is independent\n * to all the other player instances, this means that you can have more\n * players inside a single page, all managed independently.\n * How to manage the instances is your own choice.\n * You can use your own players manager, creating your interface and manage it in\n * the way you want, or you can use the {@link VideoPlayer} interface,\n * that provides you a faster and easier way to manage more players in a single page. Please\n * remember that if you are using the VideoPlayer class you need to interact directly with that.\n * @example\n * const options = {\n *     domNode: document.getElementById('player'),\n *     provider: 'dailymotion',\n *     videoId: 'xwr14q',\n *     providerOptions: {\n *        params: {\n *            quality: 720,\n *        },\n *     },\n * };\n * const player = new Player(options, 'player_1');\n */\nclass Player {\n    id = null;\n\n    player = null;\n\n    /**\n     * Creates an instance of Player.\n     * @param {Object} options configuration options ( provider, videoId, url, domNode... )\n     * @param {String|Node} options.domNode DOM element identifier,\n     * where to mount the player.\n     *\n     * Can be a DOM Node instance (ex: document.getElementById(id)),\n     * a string representing the Node ID (ex: id) or a querySelector for a Node ID (ex: #id)\n     * @param {String} options.provider The provider to use,\n     * one of: 'dailymotion', 'vimeo', 'youtube', 'flowplayer'\n     * @param {String} [options.videoId] ID of the video, passed to the provider to find the video\n     * @param {String} [options.url] url of the video resource, passed to the provider\n     * @param {Object<any>}[options.providerOptions] provider init options,\n     * see each provider doc to know what can be passed here:\n     * * **Vimeo**: https://github.com/vimeo/player.js#embed-options\n     * * **Dailymotion**: https://developer.dailymotion.com/player#player-parameters\n     * * **Youtube**: https://developers.google.com/youtube/player_parameters?playerVersion=HTML5#Parameters\n     * * **Flowplayer**: https://flowplayer.com/help/developers/flowplayer-7/setup#player-options\n     * @param {String} [id] Id of the player,\n     * it is used by {@link VideoPlayer} to manage multiple Player instances\n     */\n    constructor(options, id) {\n        this.id = id;\n\n        return this.createPlayer(options, id);\n    }\n\n    /**\n     * @ignore\n     * Creates the Player provider\n     * @param options\n     * @param {String} id Id of the player to associate inside the dom\n     * @return {Player}\n     */\n    @ValidateObj({ provider: 'string', domNode: 'string|object', videoId: 'string|number' }, 0, { videoId: 'url' })\n    @ValidateArg('string|number', 1)\n    createPlayer(options, id) {\n        switch (options.provider) {\n        case 'test':\n            this.player = new TestProvider(options, id);\n            break;\n        case 'dailymotion':\n            this.player = new DailymotionProvider(options, id);\n            break;\n        case 'flowplayer':\n            this.player = new FlowplayerProvider(options, id);\n            break;\n        case 'vimeo':\n            this.player = new VimeoProvider(options, id);\n            break;\n        case 'youtube':\n            this.player = new YoutubeProvider(options, id);\n            break;\n        default:\n            this.player = null;\n            throw new Error(`Unsupported Provider ${options.provider}`);\n        }\n        return this;\n    }\n\n    /**\n     * Add a listener callback to an event.\n     * Note that the same event can manage more listeners.\n     *\n     * Please remember to store the function inside a variable, in order to call the off method\n     * to remove the listener on a precise event\n     *\n     * Supported events:\n     * * **play**: fired when video starts playing\n     * * **pause**: fired when video stops playing\n     * * **end**: fired at the end of the playback\n     * * **playbackProgress**: fired every N ms (depends ont he provider) while the video is playing\n     * * **playbackProgress25**: fired when the video reach 25% of playback duration\n     * * **playbackProgress50**: fired when the video reach 50% of playback duration\n     * * **playbackProgress75**: fired when the video reach the 75% of playback duration\n     * * **loadProgress**: fired while the video data are downloading\n     * * **seek**: fired when the video seeks from the current time to another\n     * * **setVolume**: fired when the video changes volume\n     * * **buffering**: fired when the video starts buffering (an playback stops)\n     * * **firstPlay**: fired when the video starts to play for the first time\n     * (the stop() method reset the first play, the successive play() fires a firstPlay event )\n     *\n     * *The method supports also every Provider specific events (ex. VimeoProvider **bufferend**)*\n     * @param {String} event the Event name (see supported events)\n     * @param {Function} callback Function to call when the event is fired\n     * @return {Promise<void>}\n     * @example\n     * const callback = (evt) => {\n     *     // Do stuff..\n     * };\n     * player.on('play', callback);\n     */\n    @ValidateArg('string')\n    @ValidateArg('function', 1)\n    on(event, callback) {\n        return this.player.on(event, callback);\n    }\n\n    /**\n     * Remove a listener from an event\n     *\n     * @param {String} event name of the event (see [on]{@link Player#on} supported events)\n     * @param {Function} callback method to remove\n     * @return {Promise<void>}\n     * @example\n     * player.off('play', callback);\n     */\n    @ValidateArg('string')\n    @ValidateArg('function', 1)\n    off(event, callback) {\n        return this.player.off(event, callback);\n    }\n\n    /**\n     * Play the video.\n     * @return {Promise<void>}\n     * @example\n     * player.play();\n     */\n    play() {\n        return this.player.play();\n    }\n\n    /**\n     * Pause the video\n     * @return {Promise<void>}\n     * @example\n     * player.pause();\n     */\n    pause() {\n        return this.player.pause();\n    }\n\n    /**\n     * Stop the video (restarting from 0s)\n     * @return {Promise<void>}\n     * @example\n     * player.stop();\n     */\n    stop() {\n        return this.player.stop();\n    }\n\n    /**\n     * Mute the video\n     * @return {Promise<void>}\n     * @example\n     * player.mute();\n     */\n    mute() {\n        return this.player.mute();\n    }\n\n    /**\n     * Unmute the video\n     * @return {Promise<void>}\n     * @example\n     * player.unmute();\n     */\n    unmute() {\n        return this.player.unmute();\n    }\n\n    /**\n     * Switch between muted and unmuted\n     * @return {Promise<void>}\n     * @example\n     * player.toggleMute();\n     */\n    toggleMute() {\n        return this.player.toggleMute();\n    }\n\n    /**\n     * Enter/exit in fullscreen mode\n     * @return {Promise<void>}\n     * @example\n     * player.toggleFullScreen();\n     */\n    toggleFullScreen() {\n        return this.player.toggleFullScreen();\n    }\n\n    /**\n     * Play/Pause the video\n     * @return {Promise<void>}\n     * @example\n     * player.togglePlay();\n     */\n    togglePlay() {\n        return this.player.togglePlay();\n    }\n\n    /**\n     * Set the volume level to the given value.\n     *\n     * @param {Number} volumeLevel Value between 0 and 1.\n     * @return {Promise<void>}\n     * @example\n     * player.setVolume(1); // Max volume\n     * player.setVolume(0); // Muted\n     */\n    @ValidateArg('number')\n    setVolume(volumeLevel) {\n        return this.player.setVolume(volumeLevel);\n    }\n\n    /**\n     * Go forward in the video by the specified value (in seconds)\n     *\n     * @param {Number} seconds seconds to forward\n     * @return {Promise<void>}\n     * @example\n     * player.forward(15);\n     */\n    @ValidateArg('number')\n    forward(seconds) {\n        return this.player.forward(seconds);\n    }\n\n    /**\n     * Go back in the video by the specified value (in seconds)\n     *\n     * @param {Number} seconds seconds to rewind\n     * @return {Promise<void>}\n     * @example\n     * player.rewind(15);\n     */\n    @ValidateArg('number')\n    rewind(seconds) {\n        return this.player.rewind(seconds);\n    }\n\n    /**\n     * Set the current time of the video at the specified value (in seconds)\n     *\n     * @param {Number} seconds seconds to seek\n     * @return {Promise<void>}\n     * @example\n     * player.seek(45);\n     */\n    @ValidateArg('number')\n    seek(seconds) {\n        return this.player.seek(seconds);\n    }\n\n    /**\n     * Destroy the Player (it will remove the active instance of the player and the\n     * player element in the DOM).\n     *\n     * @return {Promise<void>}\n     * @example\n     * player.clear();\n     */\n    clear() {\n        this.player.clear();\n        this.player = null;\n    }\n\n    /**\n     * Directly download the video or returns the video Url\n     * @return {Promise<void|string>}\n     * @example\n     * player.download();\n     */\n    download() {\n        return this.player.download();\n    }\n\n    /**\n     * Get the list of all the active listeners on the player, with the\n     *  added functions\n     *\n     * @return {Object<string, Array<function>>}\n     * @example\n     * player.getListeners();\n     * /* {\n     * *    play: [Function, Function, ...],\n     * *    pause: [Function, ...],\n     * *  }\n     *\n     */\n    getListeners() {\n        return this.player.listeners;\n    }\n}\n\nexport default Player;\n","import Player from '../Player';\nimport { ValidateArg, ValidateObj, ValidateOptionalArg } from '../Validation';\n\n/**\n * @namespace VideoPlayer\n */\nclass VideoPlayer {\n    defaults = {\n        idPrefix: 'video_',\n        provider: null,\n        forward: 15,\n        rewind: 15,\n    };\n\n    /**\n     * @ignore\n     * @type {Object.<string, Player>}\n     */\n    playerInstances = {};\n\n    /**\n     * @ignore\n     * generate an unique id\n     * @param {String} idOrUrl fixed part of the id\n     * @param {Number} affix incremental counter to append at the end of the id\n     * @return {string}\n     */\n    generateId(idOrUrl, affix = 1) {\n        const { idPrefix } = this.defaults;\n        const id = `${idPrefix}${idOrUrl}_${affix}`;\n        if (Object.keys(this.playerInstances).includes(id)) {\n            return this.generateId(idOrUrl, affix + 1);\n        }\n        return id;\n    }\n\n    /**\n     * Create a new {@link Player} instance\n     * @param {Object} playerInitOptions configuration options (provider, videoId, url, domNode...)\n     * @param {String|Node} playerInitOptions.domNode DOM element identifier,\n     * where to mount the player.\n     *\n     * Can be a DOM Node instance (ex: document.getElementById(id)),\n     * a string representing the Node ID (ex: id) or a querySelector for a Node ID (ex: #id)\n     * @param {String} playerInitOptions.provider The provider to use,\n     * one of: 'dailymotion', 'vimeo', 'youtube', 'flowplayer'\n     * @param {String} [playerInitOptions.videoId] ID of the video,\n     * passed to the provider to find the video\n     * @param {String} [playerInitOptions.url] url of the video resource, passed to the provider\n     * @param {Object<any>}[playerInitOptions.providerOptions] provider init options,\n     * see each provider doc to know what can be passed here:\n     * * **Vimeo**: https://github.com/vimeo/player.js#embed-options\n     * * **Dailymotion**: https://developer.dailymotion.com/player#player-parameters\n     * * **Youtube**: https://developers.google.com/youtube/player_parameters?playerVersion=HTML5#Parameters\n     * * **Flowplayer**: https://flowplayer.com/help/developers/flowplayer-7/setup#player-options\n     * @example\n     * const player = VideoPlayer.createPlayer({\n     *     domNode: '#el',\n     *     provider: 'vimeo',\n     *     videoId: 'sdHg79'\n     * });\n     * @return {Player}\n     */\n    @ValidateObj({ domNode: 'string|object', videoId: 'string|number' }, 0, { videoId: 'url' })\n    createPlayer(playerInitOptions) {\n        // Get the requested provider\n        const provider = playerInitOptions.provider || this.defaults.provider;\n        if (!provider) {\n            throw new Error('cannot create player: provider or VideoPlayer.default.provider is required!');\n        }\n        // Filter the given options, remove \"events\", they are registered after\n        const playerOptions = Object.assign({}, Object.keys(playerInitOptions).filter(k => k !== 'events').reduce((o, k) => {\n            o[k] = playerInitOptions[k];\n            return o;\n        }, {}), { provider });\n        // Generate the unique id of the Player\n        const id = this.generateId(playerInitOptions.videoId || playerInitOptions.url);\n        // Create the Player\n        const player = new Player(playerOptions, id);\n        // Save the created Player by its id\n        this.playerInstances[id] = player;\n        // Register all passed events\n        if (playerInitOptions.events && Object.keys(playerInitOptions.events).length) {\n            Object.keys(playerInitOptions.events).forEach((eventName) => {\n                this.addEventListener(id, eventName, playerInitOptions.events[eventName]);\n            });\n        }\n        return player;\n    }\n\n    /**\n     * Get a previously created Player instance from its id\n     * @param {String} playerId the Player Id\n     * @return {Player}\n     * @example\n     * const player = VideoPlayer.getPlayer('video_sdHg79_1');\n     */\n    @ValidateArg('string')\n    getPlayer(playerId) {\n        if (!Object.keys(this.playerInstances).includes(playerId)) {\n            throw new Error(`Player with id ${playerId} not found`);\n        }\n        return this.playerInstances[playerId];\n    }\n\n    /**\n     * Get all created Player instances keyed by their id\n     * @example\n     * VideoPlayer.getPlayers()\n     * // {\n     * //   video_sdHg79_1: Player\n     * // }\n     *\n     * @return {Object.<string, Player>}\n     */\n    getPlayers() {\n        return this.playerInstances;\n    }\n\n    /**\n     * Get an array of all created Player\n     * @example\n     * VideoPlayer.getPlayersAsArray()\n     * // [Player]\n     * @return {Player[]}\n     */\n    getPlayersAsArray() {\n        return Object.values(this.playerInstances);\n    }\n\n    /**\n     * Add an event listener callback called when the specified event is fired\n     *\n     * Please remember to store the function inside a variable,\n     * in order to call the off method to remove the listener on a precise event\n     *\n     * Supported events:\n     * * **play**: fired when video starts playing\n     * * **pause**: fired when video stops playing\n     * * **end**: fired at the end of the playback\n     * * **playbackProgress**: fired every N ms (depends ont he provider) while the video is playing\n     * * **playbackProgress25**: fired when the video reach 25% of playback duration\n     * * **playbackProgress50**: fired when the video reach 50% of playback duration\n     * * **playbackProgress75**: fired when the video reach the 75% of playback duration\n     * * **loadProgress**: fired while the video data are downloading\n     * * **seek**: fired when the video seeks from the current time to another\n     * * **setVolume**: fired when the video changes volume\n     * * **buffering**: fired when the video starts buffering (an playback stops)\n     * * **firstPlay**: fired when the video starts to play for the first time\n     * (the stop() method reset the first play, the successive play() fires a firstPlay event )\n     *\n     * *The method supports also every Provider specific events (ex. VimeoProvider **bufferend**)*\n     * @param {String} playerId the Player Id\n     * @param {String} event the Event name (see supported events)\n     * @param {Function} callback Function to call when the event is fired\n     * @return {Promise<void>}\n     * @example\n     * const callback = (evt) => {\n     *     // Do stuff..\n     * }\n     * VideoPlayer.addEventListener('video_sdHg79_1', 'play', callback);\n     */\n    @ValidateArg('string', 1)\n    @ValidateArg('function', 2)\n    addEventListener(playerId, event, callback) {\n        return this.getPlayer(playerId).on(event, callback);\n    }\n\n    /**\n     * Remove a previously registered callback to an event\n     * @param {String} playerId the Player Id\n     * @param {String} event the Event name\n     * (see [addEventListener]{@link VideoPlayer#addEventListener} supported events)\n     * @param {Function} callback Function registered\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.removeEventListener('video_sdHg79_1', 'play', callback);\n     */\n    @ValidateArg('string', 1)\n    @ValidateArg('function', 2)\n    removeEventListener(playerId, event, callback) {\n        return this.getPlayer(playerId).off(event, callback);\n    }\n\n    /**\n     * Destroys a Player instance\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.clear('video_sdHg79_1').then(() => {\n     *     // Player is cleared\n     * })\n     */\n    clear(playerId) {\n        const player = this.getPlayer(playerId);\n        delete this.playerInstances[playerId];\n        return player.clear();\n    }\n\n    /**\n     * Destroys all Player instances\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.clearAll().then(() => {\n     *     // All players are cleared\n     * })\n     */\n    clearAll() {\n        const clearPromises = Object.keys(this.playerInstances)\n            .map(playerId => this.clear(playerId));\n        return Promise.all(clearPromises).then(() => {\n            this.playerInstances = {};\n        });\n    }\n\n    /**\n     * Send [play]{@link Player#play} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.play('video_sdHg79_1').then(() => {\n     *     // Player is played\n     * })\n     */\n    play(playerId) {\n        return this.getPlayer(playerId).play();\n    }\n\n    /**\n     * Send [pause]{@link Player#pause} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.pause('video_sdHg79_1').then(() => {\n     *     // Player is paused\n     * })\n     */\n    pause(playerId) {\n        return this.getPlayer(playerId).pause();\n    }\n\n    /**\n     * Send [stop]{@link Player#stop} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.stop('video_sdHg79_1').then(() => {\n     *     // Player is stopped\n     * })\n     */\n    stop(playerId) {\n        return this.getPlayer(playerId).stop();\n    }\n\n    /**\n     * Send [mute]{@link Player#mute} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.mute('video_sdHg79_1').then(() => {\n     *     // Player is muted\n     * })\n     */\n    mute(playerId) {\n        return this.getPlayer(playerId).mute();\n    }\n\n    /**\n     * Send [unmute]{@link Player#unmute} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.unmute('video_sdHg79_1').then(() => {\n     *     // Player is unmuted\n     * })\n     */\n    unmute(playerId) {\n        return this.getPlayer(playerId).unmute();\n    }\n\n    /**\n     * Send [toggleMute]{@link Player#toggleMute} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.toggleMute('video_sdHg79_1').then(() => {\n     *     // Mute is toggled\n     * })\n     */\n    toggleMute(playerId) {\n        return this.getPlayer(playerId).toggleMute();\n    }\n\n    /**\n     * Send [toggleFullScreen]{@link Player#toggleFullScreen} command to the Player\n     * @param {String} playerId the Player Id\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.toggleFullScreen('video_sdHg79_1').then(() => {\n     *     // Full screen is toggled\n     * })\n     */\n    toggleFullScreen(playerId) {\n        return this.getPlayer(playerId).toggleFullScreen();\n    }\n\n    /**\n     * Send [setVolume]{@link Player#setVolume} command to the Player\n     * @param {String} playerId the Player Id\n     * @param volume volume level to set, value between 0 and 1\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.setVolume('video_sdHg79_1', 0.5).then(() => {\n     *     // Volume is set\n     * })\n     */\n    @ValidateArg('number', 1)\n    setVolume(playerId, volume) {\n        return this.getPlayer(playerId).setVolume(volume);\n    }\n\n    /**\n     * Send [seek]{@link Player#seek} command to the Player\n     * @param {String} playerId the Player Id\n     * @param {Number} seconds seconds to seek\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.seek('video_sdHg79_1', 42).then(() => {\n     *     // Player is seeked\n     * })\n     */\n    @ValidateArg('number', 1)\n    seek(playerId, seconds) {\n        return this.getPlayer(playerId).seek(seconds);\n    }\n\n    /**\n     * Send [forward]{@link Player#forward} command to the Player\n     * @param {String} playerId the Player Id\n     * @param {Number} seconds seconds to forward\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.forward('video_sdHg79_1', 10).then(() => {\n     *     // Player is forwarded\n     * })\n     */\n    @ValidateOptionalArg('number', 1)\n    forward(playerId, seconds) {\n        return this.getPlayer(playerId).forward(seconds || this.defaults.forward);\n    }\n\n    /**\n     * Send [rewind]{@link Player#rewind} command to the Player\n     * @param {String} playerId the Player Id\n     * @param {Number} seconds seconds to rewind\n     * @return {Promise<void>}\n     * @example\n     * VideoPlayer.rewind('video_sdHg79_1', 10).then(() => {\n     *     // Player is rewinded\n     * })\n     */\n    @ValidateOptionalArg('number', 1)\n    rewind(playerId, seconds) {\n        return this.getPlayer(playerId).rewind(seconds || this.defaults.rewind);\n    }\n\n    /**\n     * Directly download the video or returns the video Url\n     * @param {String} playerId the Player Id\n     * @return {Promise<void|string>}\n     * @example\n     * VideoPlayer.download('video_sdHg79_1').then((url)) => {\n     *     // For providers that not download directly, url is the provider website url to the video\n     * };\n     */\n    download(playerId) {\n        return this.getPlayer(playerId).download();\n    }\n}\n\nexport default new VideoPlayer();\n","import VideoPlayer from './VideoPlayer';\nimport Player from './Player';\n\nexport default VideoPlayer;\n\nexport { Player, VideoPlayer };\n"],"sourceRoot":""}